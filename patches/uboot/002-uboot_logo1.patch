diff --git '${BUILD_DIR}'uboot-linux4sam_5.7/board/atmel/sama5d2_xplained/sama5d2_xplained.c '${BUILD_DIR}'uboot-linux4sam_5.7/board/atmel/sama5d2_xplained/sama5d2_xplained.c
index ceba699bce..02c0167ff9 100644
--- '${BUILD_DIR}'uboot-linux4sam_5.7/board/atmel/sama5d2_xplained/sama5d2_xplained.c
+++ '${BUILD_DIR}'uboot-linux4sam_5.7/board/atmel/sama5d2_xplained/sama5d2_xplained.c
@@ -24,6 +24,8 @@
 #include <asm/arch/gpio.h>
 #include <asm/arch/sama5d2.h>
 
+#define SHOW_DELTA_LOGO
+
 DECLARE_GLOBAL_DATA_PTR;
 
 static void board_usb_hw_init(void)
@@ -32,6 +34,56 @@ static void board_usb_hw_init(void)
 }
 
 #if defined(CONFIG_DM_VIDEO) && defined(CONFIG_ATMEL_HLCD)
+
+#if defined(SHOW_DELTA_LOGO)
+static int video_show_delta_logo_info(void)
+{
+	ulong dram_size;
+	int i;
+	u32 len = 0;
+	char buf[255];
+	char *corp = "2017 Delta Electronics Inc.\n";
+	char temp[32];
+	struct udevice *dev, *con;
+	const char *s;
+	vidinfo_t logo_info;
+	int ret;
+
+	get_delta_logo_info(&logo_info);
+
+	len += sprintf(&buf[len], "%s\n", U_BOOT_VERSION);
+	memcpy(&buf[len], corp, strlen(corp));
+	len += strlen(corp);
+	len += sprintf(&buf[len], "%s CPU at %s MHz\n", get_cpu_name(),
+			strmhz(temp, get_cpu_clk_rate()));
+
+	dram_size = 0;
+	for (i = 0; i < CONFIG_NR_DRAM_BANKS; i++)
+		dram_size += gd->bd->bi_dram[i].size;
+
+	len += sprintf(&buf[len], "%ld MB SDRAM\n", dram_size >> 20);
+
+	ret = uclass_get_device(UCLASS_VIDEO, 0, &dev);
+	if (ret)
+		return ret;
+
+	ret = video_bmp_display(dev, logo_info.logo_addr,
+				logo_info.logo_x_offset,
+				logo_info.logo_y_offset, false);
+	if (ret)
+		return ret;
+
+	ret = uclass_get_device(UCLASS_VIDEO_CONSOLE, 0, &con);
+	if (ret)
+		return ret;
+
+	vidconsole_position_cursor(con, 0, logo_info.logo_height);
+	for (s = buf, i = 0; i < len; s++, i++)
+		vidconsole_put_char(con, *s);
+
+	return 0;
+}
+#else 
 static int video_show_board_logo_info(void)
 {
 	ulong dram_size;
@@ -80,12 +132,17 @@ static int video_show_board_logo_info(void)
 	return 0;
 }
 #endif
+#endif
 
 #ifdef CONFIG_BOARD_LATE_INIT
 int board_late_init(void)
 {
 #ifdef CONFIG_DM_VIDEO
+#if !defined(SHOW_DELTA_LOGO)
 	video_show_board_logo_info();
+#else
+	video_show_delta_logo_info();
+#endif
 #endif
 	return 0;
 }
@@ -137,6 +194,10 @@ int dram_init(void)
 }
 
 #ifdef CONFIG_CMD_I2C
+
+#define MAC24AA_ADDR  0x50
+#define MAC24AA_REG   0xfa
+
 static int set_ethaddr_from_eeprom(void)
 {
 	const int ETH_ADDR_LEN = 6;
@@ -152,16 +213,18 @@ static int set_ethaddr_from_eeprom(void)
 		return -1;
 	}
 
-	if (dm_i2c_probe(bus, AT24MAC_ADDR, 0, &dev)) {
+	if (dm_i2c_probe(bus, MAC24AA_ADDR, 0, &dev)) {
 		printf("Failed to probe I2C chip\n");
 		return -1;
 	}
 
-	if (dm_i2c_read(dev, AT24MAC_REG, ethaddr, ETH_ADDR_LEN)) {
+	if (dm_i2c_read(dev, MAC24AA_REG, ethaddr, ETH_ADDR_LEN)) {
 		printf("Failed to read ethernet address from EEPROM\n");
 		return -1;
 	}
 
+	printf("\nMAC address : %02x:%02x:%02x:%02x:%02x:%02x\n",ethaddr[0],ethaddr[1],ethaddr[2],ethaddr[3],ethaddr[4],ethaddr[5]);
+    
 	if (!is_valid_ethaddr(ethaddr)) {
 		printf("The ethernet address read from EEPROM is not valid!\n");
 		return -1;
